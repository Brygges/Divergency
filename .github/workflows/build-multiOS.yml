name: Build Cross-Platform App

on:
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python & gdown
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller gdown

      - name: Download backend data from Google Drive
        shell: bash
        env:
          DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
        run: |
          mkdir -p backend
          gdown "https://docs.google.com/uc?export=download&id=${DRIVE_FOLDER_ID}" --fuzzy -O backend/backend.tar.gz
          file backend/backend.tar.gz
          tar -xzf backend/backend.tar.gz
          rm backend/backend.tar.gz

      - name: Build standalone bundle
        shell: bash
        run: |
          # On macOS this creates dist/Divergency.app via --windowed
          # On Windows it creates dist/Divergency.exe via --onefile --noconsole
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller \
              --name=Divergency \
              --onefile \
              --noconsole \
              --add-data=backend/AllSpecies:AllSpecies \
              --add-data=backend/Superposed:Superposed \
              --add-data=backend/images:images \
              --add-data=backend/node_clusters.json:node_clusters.json \
              --add-data=backend/allspecies_db:allspecies_db \
              --add-data=backend/data.json:data.json \
              --hidden-import=flask.cli \
              flaskrun.py
          else
            pyinstaller \
              --name=Divergency \
              --windowed \
              --add-data=backend/AllSpecies:AllSpecies \
              --add-data=backend/Superposed:Superposed \
              --add-data=backend/images:images \
              --add-data=backend/node_clusters.json:node_clusters.json \
              --add-data=backend/allspecies_db:allspecies_db \
              --add-data=backend/data.json:data.json \
              --hidden-import=flask.cli \
              flaskrun.py
          fi

      - name: Create macOS DMG
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          ls dist
          # dist/Divergency.app must exist
          hdiutil create \
            dist/Divergency.dmg \
            -volname "Divergency" \
            -srcfolder dist/Divergency.app \
            -ov -format UDZO
      
      - name: Create Windows installer
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          # Where the runner checked out your repo
          $codeDir   = $Env:GITHUB_WORKSPACE
          # Path to the built EXE
          $exePath   = Join-Path $codeDir "dist\Divergency.exe"
          # installer.nsi lives next to your code, not above it
          $nsiScript = Join-Path $codeDir "installer.nsi"

          Write-Host "Code directory: $codeDir"
          Write-Host "Looking for EXE at:    $exePath"
          Write-Host "Looking for NSI at:    $nsiScript"

          if (-not (Test-Path $exePath)) {
            Write-Error "❌ Cannot find Divergency.exe at $exePath"
            exit 1
          }
          if (-not (Test-Path $nsiScript)) {
            Write-Error "❌ Cannot find installer.nsi at $nsiScript"
            exit 1
          }

          # Run NSIS with full paths
          & makensis -DOUTPUT_EXE="$exePath" "$nsiScript"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-bundle
          path: |
            dist/*.dmg
            dist/*-Setup.exe
